- id: 12flooddetected
  alias: Flood Detected
  trigger:
  - entity_id: sensor.flood_detection
    from: Dry
    platform: state
  condition: []
  action:
  - data:
      data:
        push:
          sound: US-EN-Morgan-Freeman-Water-Detected-In-Basement.wav
      message: '{{ (states("sensor.flood_detection")) }}'
      title: Flood Detected!
    service: notify.mobile_app_ryphone
  - entity_id: switch.relay_8ch_1_1
    service: switch.turn_on
  - entity_id: automation.fertigation_1
    service: automation.turn_off
  - entity_id: automation.fertigation_2
    service: automation.turn_off
  - entity_id: automation.fertigation_3
    service: automation.turn_off
  - entity_id: automation.fertigation_4
    service: automation.turn_off
  - entity_id: automation.fertigation_5
    service: automation.turn_off
  - entity_id: switch.relay_4ch_1_0
    service: switch.turn_off
  - entity_id: switch.relay_4ch_1_1
    service: switch.turn_off
  - entity_id: switch.relay_4ch_1_2
    service: switch.turn_off
  - entity_id: switch.relay_4ch_1_3
    service: switch.turn_off
  mode: single
- id: 12phdown
  alias: pH Down Dosing
  description: ''
  trigger:
  - platform: time_pattern
    minutes: /1
  condition:
  - condition: template
    value_template: '{{ (float(states(''sensor.atlas_ph''))) >= (float(states(''input_number.target_ph_input''))
      + 0.1) }}'
  - condition: state
    entity_id: switch.relay_4ch_1_1
    state: 'on'
  action:
  - data:
      payload: 00:300
      topic: control/dosing
    service: mqtt.publish
- id: 12phup
  alias: pH Up Dosing
  description: ''
  trigger:
  - platform: time_pattern
    minutes: /1
  condition:
  - condition: template
    value_template: '{{ (float(states(''sensor.atlas_ph''))) <= (float(states(''input_number.target_ph_input''))
      - 0.1) }}'
  - condition: state
    entity_id: switch.relay_4ch_1_1
    state: 'on'
  action:
  - data:
      payload: 05:300
      topic: control/dosing
    service: mqtt.publish
- id: 12humidstart
  alias: Humidifier Start
  description: ''
  trigger:
  - entity_id: sensor.tent_humidity
    platform: state
  condition:
  - condition: template
    value_template: '{{(states(''sensor.tent_humidity'') | float) <= (states(''input_number.humidity_target'')
      | float -5.0) }}'
  - condition: state
    entity_id: switch.tent_humidifier
    state: 'off'
  action:
  - data: {}
    entity_id: switch.tent_humidifier
    service: switch.turn_on
  mode: single
- id: 12humidstop
  alias: Humidifier Stop
  description: ''
  trigger:
  - entity_id: sensor.tent_humidity
    platform: state
  condition:
  - condition: template
    value_template: '{{(states(''sensor.tent_humidity'') | float) >= (states(''input_number.humidity_target'')
      | float +5.0) }}'
  - condition: state
    entity_id: switch.tent_humidifier
    state: 'on'
  action:
  - data: {}
    entity_id: switch.tent_humidifier
    service: switch.turn_off
  mode: single
- id: 12phstream
  alias: pH Stream
  trigger:
  - platform: state
    entity_id: sensor.atlas_ph
  action:
  - data_template:
      entity_id: input_number.reading10
      value: '{{ states(''input_number.reading9'') }}'
    service: input_number.set_value
  - data_template:
      entity_id: input_number.reading9
      value: '{{ states(''input_number.reading8'') }}'
    service: input_number.set_value
  - data_template:
      entity_id: input_number.reading8
      value: '{{ states(''input_number.reading7'') }}'
    service: input_number.set_value
  - data_template:
      entity_id: input_number.reading7
      value: '{{ states(''input_number.reading6'') }}'
    service: input_number.set_value
  - data_template:
      entity_id: input_number.reading6
      value: '{{ states(''input_number.reading5'') }}'
    service: input_number.set_value
  - data_template:
      entity_id: input_number.reading5
      value: '{{ states(''input_number.reading4'') }}'
    service: input_number.set_value
  - data_template:
      entity_id: input_number.reading4
      value: '{{ states(''input_number.reading3'') }}'
    service: input_number.set_value
  - data_template:
      entity_id: input_number.reading3
      value: '{{ states(''input_number.reading2'') }}'
    service: input_number.set_value
  - data_template:
      entity_id: input_number.reading2
      value: '{{ states(''input_number.reading1'') }}'
    service: input_number.set_value
  - data_template:
      entity_id: input_number.reading1
      value: '{{ states(''sensor.atlas_ph'') }}'
    service: input_number.set_value
  mode: single
- id: 12lightsoff
  alias: 4x4 Lights Off
  description: ''
  trigger:
  - platform: template
    value_template: '{{ states(''input_datetime.lights_off_time_4x4'').rsplit('':'',1)[0]
      == states(''sensor.time'') }} '
  condition: []
  action:
  - data: {}
    entity_id: switch.grow_light
    service: switch.turn_off
  mode: single
- id: 12lightson
  alias: 4x4 Lights On
  description: ''
  trigger:
  - platform: template
    value_template: '{{ states(''input_datetime.lights_on_time_4x4'').rsplit('':'',1)[0]
      == states(''sensor.time'') }} '
  condition: []
  action:
  - entity_id: switch.grow_light
    service: switch.turn_on
  mode: single
- id: 12autofert1
  alias: Fertigation 1
  description: ''
  trigger:
  - platform: template
    value_template: '{{ states(''sensor.time'') == states(''input_datetime.fert_1_time_4x4'')[0:5]
      }}'
  condition:
  - condition: state
    entity_id: binary_sensor.fert_1
    state: 'on'
  action:
  - data: {}
    entity_id: script.1fertigate1
    service: script.turn_on
- id: 12autofert2
  alias: Fertigation 2
  description: ''
  trigger:
  - platform: template
    value_template: '{{ states(''sensor.time'') == states(''input_datetime.fert_2_time_4x4'')[0:5]
      }}'
  condition:
  - condition: state
    entity_id: binary_sensor.fert_2
    state: 'on'
  action:
  - data: {}
    entity_id: script.1fertigate2
    service: script.turn_on
- id: 12autofert3
  alias: Fertigation 3
  description: ''
  trigger:
  - platform: template
    value_template: '{{ states(''sensor.time'') == states(''input_datetime.fert_3_time_4x4'')[0:5]
      }}'
  condition:
  - condition: state
    entity_id: binary_sensor.fert_3
    state: 'on'
  action:
  - data: {}
    entity_id: script.1fertigate3
    service: script.turn_on
- id: 12autofert4
  alias: Fertigation 4
  description: ''
  trigger:
  - platform: template
    value_template: '{{ states(''sensor.time'') == states(''input_datetime.fert_4_time_4x4'')[0:5]
      }}'
  condition:
  - condition: state
    entity_id: binary_sensor.fert_4
    state: 'on'
  action:
  - data: {}
    entity_id: script.1fertigate4
    service: script.turn_on
- id: 12autofert5
  alias: Fertigation 5
  description: ''
  trigger:
  - platform: template
    value_template: '{{ states(''sensor.time'') == states(''input_datetime.fert_5_time_4x4'')[0:5]
      }}'
  condition:
  - condition: state
    entity_id: binary_sensor.fert_5
    state: 'on'
  action:
  - data: {}
    entity_id: script.1fertigate5
    service: script.turn_on
- id: 12stirnuteres
  alias: Stir Nute Res
  description: ''
  trigger:
  - platform: time_pattern
    minutes: /20
  condition:
  - above: '10'
    condition: numeric_state
    entity_id: sensor.water_level
  action:
  - entity_id: script.1stirnuteres
    service: script.turn_on
- id: 12emptybasin
  alias: Empty Basin
  description: ''
  trigger:
  - platform: time_pattern
    seconds: /30
  condition:
  - condition: state
    entity_id: sensor.drain_basin
    state: Basin full!
  - condition: state
    entity_id: script.1emptybasin
    state: 'off'
  action:
  - service: script.1emptybasin
- id: 12setdosingconnect
  alias: Set Dosing PWM on Connect
  description: Sends values for pump speeds when the ESP32 connects to MQTT broker
  trigger:
  - platform: mqtt
    topic: feedback/general
    payload: Garden controller connected.
  condition: []
  action:
  - delay: 00:00:05
  - service: mqtt.publish
    data:
      topic: calibrate/dosing
      payload_template: 0:{{ states('input_number.dosing_pwm_0_ph_down') | int }}
  - service: mqtt.publish
    data:
      topic: calibrate/dosing
      payload_template: 1:{{ states('input_number.dosing_pwm_1_calmag') | int }}
  - service: mqtt.publish
    data:
      topic: calibrate/dosing
      payload_template: 2:{{ states('input_number.dosing_pwm_2_micro') | int }}
  - service: mqtt.publish
    data:
      topic: calibrate/dosing
      payload_template: 3:{{ states('input_number.dosing_pwm_3_bloom') | int }}
  - service: mqtt.publish
    data:
      topic: calibrate/dosing
      payload_template: 4:{{ states('input_number.dosing_pwm_4_grow') | int }}
  - service: mqtt.publish
    data:
      topic: calibrate/dosing
      payload_template: 5:{{ states('input_number.dosing_pwm_5_ph_up') | int }}
  mode: single
- id: 12updatedosing
  alias: Update Dosing Pump PWM
  description: ''
  trigger:
  - platform: state
    entity_id: input_number.dosing_pwm_0_ph_down
  - platform: state
    entity_id: input_number.dosing_pwm_1_calmag
  - platform: state
    entity_id: input_number.dosing_pwm_2_micro
  - platform: state
    entity_id: input_number.dosing_pwm_3_bloom
  - platform: state
    entity_id: input_number.dosing_pwm_4_grow
  - platform: state
    entity_id: input_number.dosing_pwm_5_ph_up
  condition: []
  action:
  - service: mqtt.publish
    data:
      topic: calibrate/dosing
      payload_template: '{{ trigger.entity_id.split("_")[3] }}:{{ (trigger.to_state.state)
        | int }}'
  mode: single
- id: 12updatescalecal
  alias: Update Scale Cal Factor
  description: ''
  trigger:
  - platform: state
    entity_id: input_number.scale_cal_factor
  condition: []
  action:
  - service: mqtt.publish
    data:
      topic: calibrate/scale
      payload_template: '{{ (trigger.to_state.state) | int }}'
  mode: single
- id: 12setdefaults
  alias: Set Defaults on HA Boot
  description: ''
  trigger:
  - platform: homeassistant
    event: start
  condition: []
  action:
  - service: mqtt.publish
    data:
      topic: feedback/flood
      payload: Dry
  mode: single
- id: 12fanspeedhigh
  alias: Exhaust Fan High Speed
  description: ''
  trigger:
  - platform: time_pattern
    seconds: '30'
  condition:
  - condition: template
    value_template: '{{ (states("sensor.tent_temp_2")| float) >= (states("input_number.temp_target")
      | float) + 2 }}'
  - condition: template
    value_template: '{{ (states("sensor.tent_temp")| float) >= (states("input_number.temp_target")
      | float) + 2 }}'
  action:
  - service: fan.set_speed
    data:
      speed: high
    entity_id: fan.tent_exhaust
  mode: parallel
  max: 10
- id: 12fanspeedlow
  alias: Exhaust Fan Low Speed
  description: ''
  trigger:
  - platform: time_pattern
    seconds: '30'
  condition:
  - condition: template
    value_template: '{{ (states("sensor.tent_temp_2")| float) <= (states("input_number.temp_target")
      | float) - 1 }}'
  - condition: template
    value_template: '{{ (states("sensor.tent_temp")| float) <= (states("input_number.temp_target")
      | float) - 1 }}'
  action:
  - service: fan.set_speed
    data:
      speed: low
    entity_id: fan.tent_exhaust
  mode: single
